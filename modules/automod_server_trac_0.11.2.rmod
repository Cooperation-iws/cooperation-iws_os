#!/bin/bash


RMOD_ENGINE=1.0
RMOD_CATEGORY='Software'
RMOD_SUBCATEGORY='Servers'
RMOD_NAME='Trac Subversion 0.11.2'
RMOD_AUTHOR='Oliv'
RMOD_VERSION=0.2
RMOD_DESCRIPTION='SCM'
RMOD_DESCRIPTION_FR='SCM'
RMOD_VERBOSE="Subversion is a free/open-source version control system. That is, Subversion manages files and directories, and the changes made to them, over time. This allows you to recover older versions of your data, or examine the history of how your data changed. In this regard, many people think of a version control system as a sort of “time machine”. Trac is an enhanced wiki and issue tracking system for software development projects. Trac uses a minimalistic approach to web-based software project management. Our mission is to help developers write great software while staying out of the way. Trac should impose as little as possible on a team's established development process and policies. "
RMOD_VERBOSE_FR="Subversion (en abrégé svn) est un système de gestion de versions, distribué sous licence Apache et BSD. Il a été conçu pour remplacer CVS. Ses auteurs s'appuient volontairement sur les mêmes concepts (notamment sur le principe du dépôt centralisé et unique) et considèrent que le modèle de CVS est le bon, et que seule son implémentation est en cause. Le projet a été lancé en février 2000 par CollabNet, avec l'embauche par Jim Blandy de Karl Fogel, qui travaillait déjà sur un nouveau gestionnaire de version. Trac est un système Open Source de gestion complète de projet par Internet, développé en Python."

RMOD_RUN_IN_CHROOT=True
RMOD_UPDATE_URL='http://cooperation-iws.gensys-net.eu/update/modules/'
RMOD_REQ_APACHE=True
SILENT=$(cat /tmp/silent)
. /tmp/app_params

export LC_ALL=C
LC_ALL=C
WWW_DIRECTORY=$(cat /tmp/web-path)
DL_DIR=$(cat /tmp/web_install-path)
BIN_MYSQL=$(cat /tmp/mysql-path)
LAMPP_DIRECTORY=$(cat /tmp/lampp-dir)
DISPLAY=127.0.0.1:5.0
LANG_UI=$(cat /tmp/lang-wui)

#TEMP
MIRROIR=$(cat /tmp/mirroir)
URL_FREE=$(cat /tmp/url_mirroir)
INSTALL=$(cat /tmp/def_install)

NB_SVN=${#svn_name[*]}
TRAC_NAME=$trac_name
for (( count=1; count<=$NB_SVN; count++ ))
do
SVN_NAME[$count]=${svn_name[$count]}
done

#_______________________________________________________________________________________________
#________________________________________INSTALL_________________________________________________


function INSTALL 
{
echo "I: Install SVN"

aptitude install -y subversion subversion-tools
aptitude install -y libapache2-svn
aptitude install -y trac
apt-get install --yes --force-yes python-pygments enscript
mkdir $LAMPP_DIRECTORY/var/trac
mkdir $LAMPP_DIRECTORY/var/private/

mv /usr/bin/svnserve /usr/bin/svnserve.bin

echo "#!/bin/sh
# wrap in order to put root in by default
# Script implemented by Adrian Robert <arobert@cogsci.ucsd.edu>
" > /usr/bin/svnserve

for (( count=1; count<=$NB_SVN; count++ ))
do
mkdir $LAMPP_DIRECTORY/var/svn$count


svnadmin create $LAMPP_DIRECTORY/var/svn$count/${SVN_NAME[$count]}




echo "
  <location /svn$count>
       # Chargement du module subversion
       DAV svn
       # On indique le chemin complet vers le dépôt subversion
       SVNParentPath  $LAMPP_DIRECTORY/var/svn$count

       #Ici on demande une identification avec mot de passe
       #utilisez htpasswd2 pour créer le fichier
       AuthType Basic
       AuthName \"Cooperation-iws : svn_${SVN_NAME[$count]}\"
       AuthUserFile $LAMPP_DIRECTORY/var/private/svn_${SVN_NAME[$count]}.htpasswd
       Require valid-user

       # On indique ici le fichier de configuration des permissions d'accès au dépot subversion
       AuthzSVNAccessFile $LAMPP_DIRECTORY/var/private/svnperm_${SVN_NAME[$count]}
   </location>

" >> /etc/apache2/conf.d/svn_$count



cd $LAMPP_DIRECTORY/var/private/
if [ "$(echo $SILENT | awk  '{print $1}')" != "" ]; then
htpasswd -cm -b svn_${SVN_NAME[$count]}.htpasswd admin ${svn_admin_pwd[$count]}
htpasswd -m -b svn_${SVN_NAME[$count]}.htpasswd anonymous ${svn_anonymous_pwd[$count]}
else
echo "
----------------Cooperation-iws SVN-------------------
----------Enter the admin password for svn------------"

htpasswd -cm svn.htpasswd admin

echo "
----------------Cooperation-iws SVN-------------------
----------Enter the anonymous password for svn--------"

htpasswd -m svn.htpasswd anonymous
fi
echo "
[/]
anonymous = r
admin = rw
" > $LAMPP_DIRECTORY/var/private/svnperm_${SVN_NAME[$count]}

chown -R www-data $LAMPP_DIRECTORY/var/svn$count
chmod -R 775 $LAMPP_DIRECTORY/var/svn$count

/etc/init.d/apache2 reload
sleep 10

#echo "
#-------------------------Cooperation-iws SVN------------------------------
#----------Login into the svn repository with admin password---------------"

#svn mkdir http://localhost/svn/project/trunk http://localhost/svn/project/branches http://localhost/svn/project/tags -m "Création des répertoires d'archivage Subversion."  --username=admin
echo "
exec /usr/bin/svnserve.bin -r $LAMPP_DIRECTORY/var/svn$count \"\$@\"
" >> /usr/bin/svnserve

chmod +x /usr/bin/svnserve

sed -i '12s/#//' $LAMPP_DIRECTORY/var/svn$count/${SVN_NAME[$count]}/conf/svnserve.conf
sed -i '13s/#//' $LAMPP_DIRECTORY/var/svn$count/${SVN_NAME[$count]}/conf/svnserve.conf


echo "I: End of Install SVN"
echo "I: Install Trac"







cd $LAMPP_DIRECTORY/var/trac
trac-admin ${SVN_NAME[$count]} initenv  "My Project" "sqlite:db/trac.db" "svn" "$LAMPP_DIRECTORY/var/svn$count/${SVN_NAME[$count]}" 



echo "
<Location /trac_${SVN_NAME[$count]}>
  SetHandler mod_python
  PythonHandler trac.web.modpython_frontend
  PythonInterpreter main
  PythonOption TracEnv $LAMPP_DIRECTORY/var/trac/${SVN_NAME[$count]}
  PythonOption TracUriRoot /trac_${SVN_NAME[$count]}
  SetEnv PYTHON_EGG_CACHE /tmp
</Location>
" >> /etc/apache2/conf.d/trac_$count
/etc/init.d/apache2 reload

chown -R www-data $LAMPP_DIRECTORY/var/trac
chmod -R 775 $LAMPP_DIRECTORY/var/trac

cd $LAMPP_DIRECTORY/var/private/
if [ "$(echo $SILENT | awk  '{print $1}')" != "" ]; then
htpasswd -cm -b trac.htpasswd_${SVN_NAME[$count]} admin $trac_admin_pwd
else
echo "
----------------Cooperation-iws SVN-------------------
----------Enter the admin password for trac------------"


htpasswd -cm trac.htpasswd_${SVN_NAME[$count]} admin
fi
echo "
<Location \"/trac_${SVN_NAME[$count]}/login\">
        AuthType Basic
        AuthName \"trac\"
        AuthUserFile $LAMPP_DIRECTORY/var/private/trac.htpasswd_${SVN_NAME[$count]}
        Require valid-user
</Location>
" >> /etc/apache2/conf.d/trac_admin_$count
/etc/init.d/apache2 reload

trac-admin $LAMPP_DIRECTORY/var/trac/${SVN_NAME[$count]} permission add admin TRAC_ADMIN
done
echo "I: End of install Trac"

}

#_______________________________________________________________________________________________
#________________________________________FIN_INSTALL____________________________________________


#_______________________________________________________________________________________________
#________________________________________CREATE_WUI_____________________________________________

function CREATE_WUI
{
for (( count=1; count<=$NB_SVN; count++ ))
do
echo "
<item>
	<item_category>$RMOD_DESCRIPTION</item_category>
	<item_url>/svn$count/${SVN_NAME[$count]}</item_url>
	<item_name>Subversion</item_name>
	<item_desc>$RMOD_VERBOSE</item_desc>
	<item_admin_url>/svn$count/${SVN_NAME[$count]}</item_admin_url>
</item>
" >> $WWW_DIRECTORY/cooperation-wui.xml
echo "
<item>
	<item_category>$RMOD_DESCRIPTION</item_category>
	<item_url>/trac_${SVN_NAME[$count]}</item_url>
	<item_name>Trac</item_name>
	<item_desc>$RMOD_VERBOSE</item_desc>
	<item_admin_url>/trac_${SVN_NAME[$count]}</item_admin_url>
</item>
" >> $WWW_DIRECTORY/cooperation-wui.xml
echo "
<item>
	<item_category>$RMOD_DESCRIPTION_FR</item_category>
	<item_url>/svn$count/${SVN_NAME[$count]}</item_url>
	<item_name>Subversion</item_name>
	<item_desc>$RMOD_VERBOSE_FR</item_desc>
	<item_admin_url>/svn$count/${SVN_NAME[$count]}</item_admin_url>
</item>
" >> $WWW_DIRECTORY/cooperation-wui-fr.xml
echo "
<item>
	<item_category>$RMOD_DESCRIPTION_FR</item_category>
	<item_url>/trac_${SVN_NAME[$count]}</item_url>
	<item_name>Trac</item_name>
	<item_desc>$RMOD_VERBOSE_FR</item_desc>
	<item_admin_url>/trac_${SVN_NAME[$count]}</item_admin_url>
</item>
" >> $WWW_DIRECTORY/cooperation-wui-fr.xml
done

}
#_______________________________________________________________________________________________
#________________________________________FIN_CREATE_WUI_________________________________________

INSTALL
CREATE_WUI

