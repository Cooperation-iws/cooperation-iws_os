#!/bin/bash


RMOD_ENGINE=1.0
RMOD_CATEGORY='Software'
RMOD_SUBCATEGORY='Servers'
RMOD_NAME='Indefero Git'
RMOD_AUTHOR='Oliv'
RMOD_VERSION=0.2
RMOD_DESCRIPTION='SCM'
RMOD_DESCRIPTION_FR='Gestion du réseau'
RMOD_VERBOSE="Indefero is a source code management software. "
RMOD_VERBOSE_FR="Indefero est un logiciel de gestion du code source. "

RMOD_RUN_IN_CHROOT=True
RMOD_UPDATE_URL='http://cooperation-iws.gensys-net.eu/update/modules/'
RMOD_REQ_APACHE=True

WWW_DIRECTORY=$(cat /tmp/web-path)
DL_DIR=$(cat /tmp/web_install-path)
BIN_MYSQL=$(cat /tmp/mysql-path)
LAMPP_DIRECTORY=$(cat /tmp/lampp-dir)
LANG_UI=$(cat /tmp/lang-wui)


URL_CIWS_DEPOT=$(cat /tmp/url_mirroir)

INSTALL=$(cat /tmp/def_install)
SILENT=$(cat /tmp/silent)
. /tmp/app_params

INDEFERO_MYSQL_PWD=${indefero_mysql_pwd}
MOD_NAME=${indefero_name}


#_______________________________________________________________________________________________
#________________________________________INSTALL________________________________________________


function INSTALL
{
cd $DL_DIR
wget $URL_CIWS_DEPOT/pluf-master.zip
unzip -q pluf-master.zip

cd $DL_DIR
wget $URL_CIWS_DEPOT/indefero-0.8.2.zip
unzip -q indefero-0.8.2.zip

mv indefero-0.8.2 $LAMPP_DIRECTORY/var/indefero

mv pluf-master $LAMPP_DIRECTORY/var/pluf


cat << EOT_IDF_CONF >  $LAMPP_DIRECTORY/var/indefero/src/IDF/conf/idf.php
<?php
/* -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
# ***** BEGIN LICENSE BLOCK *****
# This file is part of InDefero, an open source project management application.
# Copyright (C) 2008 Céondo Ltd and contributors.
#
# InDefero is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# InDefero is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# ***** END LICENSE BLOCK ***** */

\$cfg = array();

#
# You must set them to false once everything is running ok.
#
\$cfg['debug'] = true;
# It will help you catch errors at beginning when configuring your 
# SCM backend. It must be turned off in production.
\$cfg['debug_scm'] = true; 

#
# Note: By default, InDefero will not manage the repositories for 
# you, you can enable the repositories management with the 
# built-in plugins. The documentation of the plugins is available 
# in the `doc/` folder.
#

# If you have a single git repository, just put the full path to it
# without trailing slash. The path is the path to the git database,
# so you need to include the /.git folder.
# For example: '/path/to/my/project/.git'
#
# If you have multiple repositories, you need to put %s where you
# want the shortname of the project to be replaced. 
# For example:
# - You have many projects on your local computer and want to use 
#   InDefero to see them. Put: '/home/yourlogin/Projects/%s/.git'
# - You have many projects on a remote server with only "bare" git
#   repositories. Put: '/home/git/repositories/%s.git'
#
# ** Do not forget to give read access to these folders to your www
# ** user. For example, adding www to the git group.
\$cfg['git_repositories'] = '/home/git/repositories/%s.git';
#
# Like for the git_repositories definition, the path can contains %s
# and it will be automatically replaced. You can ignore this
# configuration variable as it is only for information use in the
# tree view.
#
\$cfg['git_remote_url'] = 'git://localhost/%s.git';
\$cfg['git_write_remote_url'] = 'git@localhost:%s.git';
\$cfg['idf_plugin_syncgit_path_gitserve'] = '/opt/ciws/var/indefero/scripts/gitserve.py'; # yes .py
\$cfg['idf_plugin_syncgit_path_authorized_keys'] = '/home/git/.ssh/authorized_keys';
\$cfg['idf_plugin_syncgit_sync_file'] = '/tmp/SYNC-GIT';

# Same as for git, you can have multiple repositories, one for each
# project or a single one for all the projects. 
#
# In the case of subversion, the admin of a project can also select a
# remote repository from the web interface. From the web interface
# you can define a local repository, local repositories are defined
# here. This if for security reasons.
\$cfg['svn_repositories'] = 'file:///home/svn/repositories/%s';
\$cfg['svn_remote_url'] = 'http://localhost/svn/%s';

# Mercurial repositories path
#$cfg['mercurial_repositories'] = '/home/mercurial/repositories/%s';
#$cfg['mercurial_remote_url'] = 'http://projects.ceondo.com/hg/%s';

# admins will get an email in case of errors in the system in non
# debug mode.
\$cfg['admins'] = array(
                       array('Admin', 'you@example.com'),
                       );

# Email configuration
\$cfg['send_emails'] = true;
\$cfg['mail_backend'] = 'smtp';
\$cfg['mail_host'] = 'localhost';
\$cfg['mail_port'] = 25;

# Paths/Url configuration.
# 
# Examples:
# You have: 
#   http://www.mydomain.com/myfolder/index.php
# Put:
#   $cfg['idf_base'] = '/myfolder/index.php';
#   $cfg['url_base'] = 'http://www.mydomain.com';
#
# You have mod_rewrite: 
#   http://www.mydomain.com/
# Put:
#   $cfg['idf_base'] = '';
#   $cfg['url_base'] = 'http://www.mydomain.com';
#
#
#
\$cfg['idf_base'] = '/Indefero/index.php';
\$cfg['url_base'] = 'http://localhost/';

# Url to access the media folder which is in the www folder 
# of the archive
\$cfg['url_media'] = 'http://localhost/Indefero/media';

# Url to access a folder in which the files you upload through
# the downloads tab will be stored.
\$cfg['url_upload'] = 'http://localhost/Indefero/media/upload';
# Path to the upload folder
\$cfg['upload_path'] = '/var/www/Indefero/media/upload';

#
# The following path *MUST NOT* be accessible through a web browser 
# as user will be able to upload .html, .php files and this can 
# create *TERRIBLE* security issues. In this folder, the attachments 
# to the issues will be uploaded and we do not restrict the content type.
#
\$cfg['upload_issue_path'] = '/opt/ciws/var/indefero/attachments';

#
# write here a long random string unique for this installation. This
# is critical to put a long string, with at least 40 characters.
\$cfg['secret_key'] = '0123456789azerty0123456789azerty0123456789azerty'; 

# the sender of all the emails.
\$cfg['from_email'] = 'indefero@ciws.com'; 

# Email address for the bounced messages.
\$cfg['bounce_email'] = 'no-reply@example.com';

# Temporary folder where the script is writing the compiled templates,
# cached data and other temporary resources.
# It must be writeable by your webserver instance.
# It is mandatory if you are using the template system.
\$cfg['tmp_folder'] = '/tmp';

# Database configuration
\$cfg['db_login'] = "${MOD_NAME}";
\$cfg['db_password'] = "$INDEFERO_MYSQL_PWD";
\$cfg['db_server'] = 'localhost';
\$cfg['db_version'] = '5.1'; # Only needed for MySQL
# If you want to have different installations with the same DB
\$cfg['db_table_prefix'] = 'indefero_'; 
# ** DO NOT USE SQLITE IN PRODUCTION ** 
# This is not because of problems with the quality of the SQLite
# driver or with SQLite itself, this is due to the lack of migration
# support in Pluf for SQLite, this means we cannot modify the DB
# easily once it is loaded with data.
\$cfg['db_engine'] = 'MySQL'; # SQLite is also well tested or MySQL
\$cfg['db_database'] = "${MOD_NAME}"; # put absolute path to the db if you
                                 # are using SQLite. 
#
# The extension of the downloads are limited. You can add extra
# extensions here.
# $cfg['idf_extra_upload_ext'] = 'ext1 ext2';
#
# By default, the size of the downloads is limited to 2MB.
# $cfg['max_upload_size'] = 2097152; // Size in bytes

# -- From this point you should not need to update anything. --
\$cfg['pear_path'] = '/usr/share/php';

\$cfg['login_success_url'] = \$cfg['url_base'].\$cfg['idf_base'];
\$cfg['after_logout_page'] = \$cfg['url_base'].\$cfg['idf_base'];

# Caching of the scm commands.
\$cfg['cache_engine'] = 'Pluf_Cache_File';
\$cfg['cache_timeout'] = 300;
\$cfg['cache_file_folder'] = \$cfg['tmp_folder'].'/cache';

# The folder in which the templates of the application are located.
\$cfg['template_folders'] = array(
                                 dirname(__FILE__).'/../templates',
                                 );

\$cfg['installed_apps'] = array('Pluf', 'IDF');
\$cfg['pluf_use_rowpermission'] = true;
\$cfg['middleware_classes'] = array(
         'Pluf_Middleware_Csrf',
         'Pluf_Middleware_Session',
         'IDF_Middleware',
         'Pluf_Middleware_Translation',
         );
\$cfg['template_context_processors'] = array('IDF_Middleware_ContextPreProcessor');
\$cfg['idf_views'] = dirname(__FILE__).'/urls.php';

# available languages
\$cfg['languages'] = array('en', 'fr'); 

# SCM base configuration
\$cfg['allowed_scm'] = array('git' => 'IDF_Scm_Git',
                            'svn' => 'IDF_Scm_Svn',
                            'mercurial' => 'IDF_Scm_Mercurial',
                            );

# If you want to use another memtypes database
# $cfg['idf_mimetypes_db'] = '/etc/mime.types';

# Extra text files when displaying source
# $cfg['idf_extra_text_ext'] = 'ext1 ext2 ext3';

# If you can execute the shell commands executed to get info
# from the scm  with the user of your PHP process but it is 
# not working from within PHP, this can be due to the environment 
# variables not being set correctly. Note the trailing space.
# $cfg['idf_exec_cmd_prefix'] = '/usr/bin/env -i ';

# Path to the SCM binaries. These binaries are not necessarily in
# the path of your webserver or fastcgi process. In that case you
# may need to set the path manually here. This is the case with OSX.
# To know which path you need to provide, just run:
# $ which git
# from the command line. This will give you the path to git.
# $cfg['svn_path'] = 'svn'; 
# $cfg['svnlook_path'] = 'svnlook'; 
# $cfg['svnadmin_path'] = 'svnadmin';
# $cfg['hg_path'] = 'hg';
\$cfg['git_path'] = '/usr/bin/git'; 

return \$cfg;
EOT_IDF_CONF

cat << EOT_INDEX > $LAMPP_DIRECTORY/var/indefero/www/index.php
<?php
/* -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
# ***** BEGIN LICENSE BLOCK *****
# This file is part of InDefero, an open source project management application.
# Copyright (C) 2008 Céondo Ltd and contributors.
#
# InDefero is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# InDefero is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# ***** END LICENSE BLOCK ***** */

// Set the include path to have Pluf and IDF in it.
\$indefero_path = '/opt/ciws/var/indefero/src';
\$pluf_path = '/opt/ciws/var/pluf/src';
set_include_path(get_include_path()
                 .PATH_SEPARATOR.\$indefero_path
                 .PATH_SEPARATOR.\$pluf_path
                 );
require 'Pluf.php';
Pluf::start(dirname(__FILE__).'/../src/IDF/conf/idf.php');
Pluf_Dispatcher::loadControllers(Pluf::f('idf_views'));
Pluf_Dispatcher::dispatch(Pluf_HTTP_URL::getAction()); 
EOT_INDEX

cat << EOT_GIT_CRON > $LAMPP_DIRECTORY/var/indefero/scripts/gitcron.php
<?php
/* -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
# ***** BEGIN LICENSE BLOCK *****
# This file is part of InDefero, an open source project management application.
# Copyright (C) 2008 Céondo Ltd and contributors.
#
# InDefero is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# InDefero is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# ***** END LICENSE BLOCK ***** */

/**
 * This script is used to control the access to the git repositories
 * using a restricted shell access.
 *
 * The only argument must be the login of the user.
 */
// Set the include path to have Pluf and IDF in it.
\$indefero_path = '/opt/ciws/var/indefero/src';
\$pluf_path = '/opt/ciws/var/pluf/src';
set_include_path(get_include_path()
                 .PATH_SEPARATOR.\$indefero_path
                 .PATH_SEPARATOR.\$pluf_path
                 );
require 'Pluf.php';
Pluf::start(dirname(__FILE__).'/../src/IDF/conf/idf.php');
Pluf_Dispatcher::loadControllers(Pluf::f('idf_views'));
IDF_Plugin_SyncGit_Cron::main();
EOT_GIT_CRON


cat << EOT_GIT_SERVER > $LAMPP_DIRECTORY/var/indefero/scripts/gitserve.php
<?php
/* -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
# ***** BEGIN LICENSE BLOCK *****
# This file is part of InDefero, an open source project management application.
# Copyright (C) 2008 Céondo Ltd and contributors.
#
# InDefero is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# InDefero is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# ***** END LICENSE BLOCK ***** */

/**
 * This script is used to control the access to the git repositories
 * using a restricted shell access.
 *
 * The only argument must be the login of the user.
 */
// Set the include path to have Pluf and IDF in it.
\$indefero_path = '/opt/ciws/var/indefero/src';
\$pluf_path = '/opt/ciws/var/pluf/src';
set_include_path(get_include_path()
                 .PATH_SEPARATOR.\$indefero_path
                .PATH_SEPARATOR.\$pluf_path
                 );
require 'Pluf.php';
Pluf::start(dirname(__FILE__).'/../src/IDF/conf/idf.php');
Pluf_Dispatcher::loadControllers(Pluf::f('idf_views'));
IDF_Plugin_SyncGit_Serve::main(\$argv, \$_ENV);
EOT_GIT_SERVER


apt-get install --assume-yes --force-yes php-mail php-mail-mime git-core gitweb 

cat << EOT_GITWEB > /etc/gitweb.conf
# path to git projects (<project>.git)
\$projectroot = "/home/git/repositories";

# directory to use for temp files
\$git_temp = "/tmp";

# target of the home link on top of all pages
#$home_link = $my_uri || "/";

# html text to include at home page
\$home_text = "indextext.html";

# file with project list; by default, simply scan the projectroot dir.
\$projects_list = $projectroot;

# stylesheet to use
\$stylesheet = "/gitweb/gitweb.css";

# logo to use
\$logo = "/gitweb/git-logo.png";

# the 'favicon'
\$favicon = "/gitweb/git-favicon.png";
EOT_GITWEB

mv /usr/share/gitweb /var/www


adduser --system --shell '/bin/sh' --gecos 'git version control' --group --disabled-password --home /home/git git

sudo -H -u git mkdir /home/git/.ssh
sudo -H -u git touch /home/git/.ssh/authorized_keys
sudo -H -u git chmod 0700 /home/git/.ssh
sudo -H -u git chmod 0600 /home/git/.ssh/authorized_keys

usermod -a -G git www-data

sudo -H -u git mkdir /home/git/repositories


echo "*/5 * * * * git  php $LAMPP_DIRECTORY/var/indefero/scripts/gitcron.php > /dev/null 2>&1" >> /etc/cron.d/indefero
sudo chmod +x /etc/cron.d/indefero


mkdir $LAMPP_DIRECTORY/var/indefero
mkdir $LAMPP_DIRECTORY/var/indefero/attachments

mkdir /var/www/${MOD_NAME}
ln -s $LAMPP_DIRECTORY/var/indefero/www/index.php /var/www/${MOD_NAME}
ln -s $LAMPP_DIRECTORY/var/indefero/www/media /var/www/${MOD_NAME}

echo "
create database ${MOD_NAME};
grant all on ${MOD_NAME}.* to ${MOD_NAME}@localhost identified by '${INDEFERO_MYSQL_PWD}';
flush privileges;" > INDEFERO_db.sql

$BIN_MYSQL -u root < INDEFERO_db.sql mysql
rm INDEFERO_db.sql

cd $LAMPP_DIRECTORY/var/indefero/src

php $LAMPP_DIRECTORY/var/pluf/src/migrate.php --conf=IDF/conf/idf.php -a -i -d 

cat << EOT_BOOTSTRAP > $LAMPP_DIRECTORY/var/indefero/bootstrap.php

<?php
set_include_path(get_include_path().PATH_SEPARATOR."$LAMPP_DIRECTORY/var/indefero/src");
set_include_path(get_include_path().PATH_SEPARATOR."$LAMPP_DIRECTORY/var/pluf/src");
require 'Pluf.php';
Pluf::start("$LAMPP_DIRECTORY/var/indefero/src/IDF/conf/idf.php");
Pluf_Dispatcher::loadControllers(Pluf::f('idf_views'));

\$user = new Pluf_User();
\$user->first_name = 'Admin';
\$user->last_name = 'Istrator'; // Required!
\$user->login = 'admin'; // must be lowercase!
\$user->email = 'admin@ciws.com';
\$user->password = 'cooperation'; // the password is salted/hashed 
                                  // in the database, so do not worry :)
\$user->administrator = true;
\$user->active = true;
\$user->create();
print "Bootstrap ok\n";
?>
EOT_BOOTSTRAP
chmod +x $LAMPP_DIRECTORY/var/indefero/bootstrap.php
php $LAMPP_DIRECTORY/var/indefero/bootstrap.php


chown -R www-data $LAMPP_DIRECTORY/var/indefero
chown -R www-data $LAMPP_DIRECTORY/var/pluf

cat << EOT_INIT_DAEMON > /etc/init.d/git-daemon
#!/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=git-daemon
PIDFILE=/var/run/\$NAME.pid
DESC="the git daemon"
DAEMON=/usr/bin/git-daemon
DAEMON_OPTS=" --syslog --detach --pid-file=\$PIDFILE --user=git --group=git --base-path=/home/git/repositories/ --reuseaddr /home/git/repositories/ "

test -x \$DAEMON || exit 0

[ -r /etc/default/git-daemon ] && . /etc/default/git-daemon

. /lib/lsb/init-functions

start_git() {
	start-stop-daemon --start --quiet --pidfile \$PIDFILE \
		--startas \$DAEMON -- \$DAEMON_OPTS
}

stop_git() {
	start-stop-daemon --stop --quiet --pidfile \$PIDFILE
	rm -f \$PIDFILE
}

status_git() {
	start-stop-daemon --stop --test --quiet --pidfile \$PIDFILE >/dev/null 2>&1
}

case "\$1" in
  start)
	log_begin_msg "Starting \$DESC"
	start_git
	log_end_msg 0
	;;
  stop)
	log_begin_msg "Stopping \$DESC"
	stop_git
	log_end_msg 0
	;;
  status)
	log_begin_msg "Testing \$DESC: "
	if status_git
	then
		log_success_msg "Running"
		exit 0
	else
		log_failure_msg "Not running"
		exit 1
	fi
	;;
  restart|force-reload)
	log_begin_msg "Restarting \$DESC"
	stop_git
	sleep 1
	start_git
	log_end_msg 0
	;;
  *)
	echo "Usage: \$0 {start|stop|restart|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
EOT_INIT_DAEMON
chmod a+x /etc/init.d/git-daemon
update-rc.d git-daemon defaults

}

#_______________________________________________________________________________________________
#________________________________________FIN_INSTALL____________________________________________

#_______________________________________________________________________________________________
#________________________________________CREATE_WUI_____________________________________________

function CREATE_WUI
{
echo "
<item>
	<item_category>$RMOD_DESCRIPTION</item_category>
	<item_url>/${MOD_NAME}</item_url>
	<item_admin_url>/${MOD_NAME}</item_admin_url>
	<item_name>$RMOD_NAME</item_name>
	<item_desc>$RMOD_VERBOSE</item_desc>
</item>
" >> $WWW_DIRECTORY/cooperation-wui.xml
echo "
<item>
	<item_category>$RMOD_DESCRIPTION_FR</item_category>
	<item_url>/${MOD_NAME}</item_url>
	<item_admin_url>/${MOD_NAME}</item_admin_url>
	<item_name>$RMOD_NAME</item_name>
	<item_desc>$RMOD_VERBOSE_FR</item_desc>
</item>
" >> $WWW_DIRECTORY/cooperation-wui-fr.xml


}
#_______________________________________________________________________________________________
#________________________________________FIN_CREATE_WUI_________________________________________




echo "I: Install Ntop"
INSTALL
CREATE_WUI
echo "I: End of install Ntop"
