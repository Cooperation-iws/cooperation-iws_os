#!/bin/bash


RMOD_ENGINE=1.0
RMOD_CATEGORY='Software'
RMOD_SUBCATEGORY='Servers'
RMOD_NAME='Virtualmin Lenny'
RMOD_AUTHOR='Oliv'
RMOD_VERSION=0.2
RMOD_DESCRIPTION='Network management'
RMOD_DESCRIPTION_FR='Gestion du rÃ©seau'
RMOD_VERBOSE=""
RMOD_VERBOSE_FR=""

RMOD_RUN_IN_CHROOT=True
RMOD_UPDATE_URL='http://cooperation-iws.gensys-net.eu/update/modules/'


WWW_DIRECTORY=$(cat /tmp/web-path)
DL_DIR=$(cat /tmp/web_install-path)
BIN_MYSQL=$(cat /tmp/mysql-path)
LAMPP_DIRECTORY=$(cat /tmp/lampp-dir)
LANG_UI=$(cat /tmp/lang-wui)
MIRROIR=$(cat /tmp/mirroir)
URL_FREE=$(cat /tmp/url_mirroir)
DEB_MIRROR_PATH=$(cat /tmp/deb_mirror_path)
#TEMP
MIRROIR="A"
NOM_CACTI="Cacti"
SILENT=$(cat /tmp/silent)
. /tmp/app_params



HOSTNAME=$(cat /tmp/hostname)

apt_cacher_root="$(echo $DEB_MIRROR_PATH | cut -d'/' -f3)"

virtualmin_repo="http://$apt_cacher_root/software.virtualmin.com/gpl/debian/"

VIRTUALMIN_NONINTERACTIVE=1
#_______________________________________________________________________________________________
#________________________________________INSTALL________________________________________________


function INSTALL
{


export HOSTNAME=$HOSTNAME

export domain=$domain

export virtualmin_repo=$virtualmin_repo

export VIRTUALMIN_NONINTERACTIVE=$VIRTUALMIN_NONINTERACTIVE

export URL_FREE=$URL_FREE

cd $DL_DIR
#cancel inhibition for mysql

wget $URL_FREE/virtualmin1.0.3/install_virtualminv3.sh
chmod +x install_virtualminv3.sh
./install_virtualminv3.sh

/etc/init.d/dovecot stop

groupmod -g621 deniedssh


mv /var/lib/ /opt/ciws/var/
rm -rf /var/lib
ln -s /opt/ciws/var/lib/ /var/lib

mv /var/usermin /opt/ciws/var
ln -s /opt/ciws/var/usermin /var/usermin

mv /var/webmin /opt/ciws/var
ln -s /opt/ciws/var/webmin /var/webmin


mv /var/log /opt/ciws/var/log
ln -s /opt/ciws/var/log /var/log

mv /etc/apache2 /opt/ciws/etc
ln -s /opt/ciws/etc/apache2 /etc/apache2

mv /etc/awstats /opt/ciws/etc
ln -s /opt/ciws/etc/awstats /etc/awstats

mv /etc/clamav /opt/ciws/etc
ln -s /opt/ciws/etc/clamav /etc/clamav

mv /etc/dovecot /opt/ciws/etc
ln -s /opt/ciws/etc/dovecot /etc/dovecot


mv /etc/ftpusers /opt/ciws/etc
ln -s /opt/ciws/etc/ftpusers /etc/ftpusers

mv /etc/ldap /opt/ciws/etc
ln -s /opt/ciws/etc/ldap /etc/ldap

mv /etc/mail /opt/ciws/etc
ln -s /opt/ciws/etc/mail /etc/mail

mv /etc/mailman /opt/ciws/etc
ln -s /opt/ciws/etc/mailman /etc/mailman

mv /etc/mysql /opt/ciws/etc
ln -s /opt/ciws/etc/mysql /etc/mysql

mv /etc/perl /opt/ciws/etc
ln -s /opt/ciws/etc/perl /etc/perl

mv /etc/php5 /opt/ciws/etc
ln -s /opt/ciws/etc/php5 /etc/php5

mv /etc/postfix /opt/ciws/etc
ln -s /opt/ciws/etc/postfix /etc/postfix

mv /etc/postgresql /opt/ciws/etc
ln -s /opt/ciws/etc/postgresql /etc/postgresql

mv /etc/postgresql-common /opt/ciws/etc
ln -s /opt/ciws/etc/postgresql-common /etc/postgresql-common

mv /etc/proftpd /opt/ciws/etc
ln -s /opt/ciws/etc/proftpd /etc/proftpd

mv /etc/samba /opt/ciws/etc
ln -s /opt/ciws/etc/samba /etc/samba

mv /etc/spamassassin /opt/ciws/etc
ln -s /opt/ciws/etc/spamassassin /etc/spamassassin

mv /etc/ssh /opt/ciws/etc
ln -s /opt/ciws/etc/ssh /etc/ssh

mv /etc/ssl /opt/ciws/etc
ln -s /opt/ciws/etc/ssl /etc/ssl

mv /etc/thttpd /opt/ciws/etc
ln -s /opt/ciws/etc/thttpd /etc/thttpd

mv /etc/usermin /opt/ciws/etc
ln -s /opt/ciws/etc/usermin /etc/usermin

mv /etc/virtualmin-licence /opt/ciws/etc
ln -s /opt/ciws/etc/virtualmin-licence /etc/virtualmin-licence

mv /etc/warnquota.conf /opt/ciws/etc
ln -s /opt/ciws/etc/warnquota.conf /etc/warnquota.conf

mv /etc/webalizer /opt/ciws/etc
ln -s /opt/ciws/etc/webalizer /etc/webalizer

mkdir /opt/ciws/usr/share

mv /etc/webmin /opt/ciws/etc
ln -s /opt/ciws/etc/webmin /etc/webmin
mv /usr/share/webmin /opt/ciws/usr/share
ln -s /opt/ciws/usr/share/webmin /usr/share/webmin

mv /usr/share/usermin /opt/ciws/usr/share
ln -s /opt/ciws/usr/share/usermin /usr/share/usermin


echo "
#!/bin/bash

#cleaning domains list
UPDT_DOMAIN_LIST=\"\$( cat /opt/ciws/var/identity/domain.txt )\"

for UPDT_DOMAIN in \$UPDT_DOMAIN_LIST
do
if [ -z \"$(cat /etc/bind/named.conf.local | grep \$UPDT_DOMAIN)\" ]; then
sed -i \"/$UPDT_DOMAIN/d\" /opt/ciws/var/identity/domain.txt
fi
done

#adding new domains
DOMAIN_LIST=\$(cat /etc/bind/named.conf.local | grep \"zone\" | cut -d'\"' -f2)

for DOMAIN in \$DOMAIN_LIST
do
if [ -z \"\$(cat /opt/ciws/var/identity/domain.txt | grep \$DOMAIN)\" ]; then
echo \"\$DOMAIN\" >> /opt/ciws/var/identity/domain.txt
sed -i \"s/www/wwi/\" /etc/bind/\$DOMAIN.hosts
sed -i \"s/www/wwi/g\" /etc/apache2/sites-available/*.conf
ip_address=\$(sudo ifconfig | grep \"RX\" --before-context=4 | grep \"UP BROADCAST RUNNING MULTICAST\" --before-context=2 | grep -m 1 \"inet adr\"| cut -d\":\" -f2 | cut -d\" \" -f1)
sed -i \"s/\$ip_address/*/g\" /etc/apache2/sites-available/*.conf
sed -i 's/_default_/\*/' /etc/apache2/sites-available/*.conf
cp /etc/bind/\$DOMAIN.hosts /etc/bind/\$DOMAIN.hosts.tpl
sed -i \"s/\$ip_address/ip_address/g\" /etc/bind/\$DOMAIN.hosts.tpl
sed -i \"s/\$ip_address/*/g\" /etc/apache2/apache2.conf
sudo /etc/init.d/apache2 reload
fi
done
" > /opt/ciws/etc/domain-watch.cron.sh

chmod +x /opt/ciws/etc/domain-watch.cron.sh

echo "*/3 * * * * root /opt/ciws/etc/domain-watch.cron.sh > /dev/null 2>&1" > /etc/cron.d/domain_detection
chmod +x /etc/cron.d/domain_detection

echo '

cd /etc/bind/
for file in /etc/bind/*.hosts.tpl
do
name=$(echo $file | cut -d"/" -f4 | sed "s/.tpl//")
cat $file | sed "s/ip_address/$ip_address/g" > /etc/bind/$name
done
sudo /etc/init.d/bind9 restart
sudo /etc/init.d/apache2 reload
' >> /opt/ciws/etc/dhclient-exit-hook.sh

sudo apt-get install --assume-yes --force-yes rsync

echo '

if [ ! -e /opt/ciws/etc/opasswd_a ]; then
rsync -p /etc/opasswd_a /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/sudoers ]; then
cp /etc/sudoers /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/shadow ]; then
rsync -p /etc/shadow /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/shadow- ]; then
rsync -p /etc/shadow- /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/oshadow_a ]; then
rsync -p /etc/oshadow_a /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/gshadow ]; then
rsync -p /etc/gshadow /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/gshadow- ]; then
rsync -p /etc/gshadow- /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/group ]; then
rsync -p /etc/group /opt/ciws/etc
fi

if [ ! -e /opt/ciws/etc/group- ]; then
rsync -p /etc/group- /opt/ciws/etc
fi


if [ -e /opt/ciws/etc/passwd  ]; then
rsync -p /opt/ciws/etc/passwd /etc/passwd
fi

if [ -e /opt/ciws/etc/passwd- ]; then
rsync -p /opt/ciws/etc/passwd- /etc/passwd-
fi

if [ -e /opt/ciws/etc/opasswd_a ]; then
rsync -p /opt/ciws/etc/opasswd_a /etc/opasswd_a
fi

if [ -e /opt/ciws/etc/sudoers ]; then
rsync -p /opt/ciws/etc/sudoers /etc/sudoers
fi

if [ -e /opt/ciws/etc/shadow ]; then
rsync -p /opt/ciws/etc/shadow /etc/shadow
fi
if [ -e /opt/ciws/etc/shadow- ]; then

rsync -p /opt/ciws/etc/shadow- /etc/shadow-
fi

if [ -e /opt/ciws/etc/oshadow_a ]; then
rsync -p /opt/ciws/etc/oshadow_a /etc/oshadow_a
fi

if [ -e /opt/ciws/etc/gshadow ]; then
rsync -p /opt/ciws/etc/gshadow /etc/gshadow
fi

if [ -e /opt/ciws/etc/gshadow- ]; then
rsync -p /opt/ciws/etc/gshadow- /etc/gshadow-
fi

if [ -e /opt/ciws/etc/group ]; then
rsync -p /opt/ciws/etc/group /etc/group
fi

if [ -e /opt/ciws/etc/group ]; then
rsync -p /opt/ciws/etc/group- /etc/group-
fi


' >> /etc/rc.local

echo "
rsync -p /etc/passwd /opt/ciws/etc
rsync -p  /etc/passwd- /opt/ciws/etc
rsync -p /etc/opasswd_a /opt/ciws/etc
rsync -p /etc/sudoers /opt/ciws/etc
rsync -p /etc/shadow /opt/ciws/etc
rsync -p /etc/shadow- /opt/ciws/etc
rsync -p /etc/oshadow_a /opt/ciws/etc
rsync -p /etc/gshadow /opt/ciws/etc
rsync -p /etc/gshadow- /opt/ciws/etc
rsync -p /etc/group /opt/ciws/etc
rsync -p /etc/group- /opt/ciws/etc
"> /opt/ciws/etc/cron_user.sh

chmod +x /opt/ciws/etc/cron_user.sh

echo "*/1 * * * * root /opt/ciws/etc/cron_user.sh" > /etc/cron.d/sudoers
chmod +x /etc/cron.d/sudoers



}

#_______________________________________________________________________________________________
#________________________________________FIN_INSTALL____________________________________________

#_______________________________________________________________________________________________
#________________________________________CREATE_WUI_____________________________________________

function CREATE_WUI
{
echo "
<item>
	<item_category>$RMOD_DESCRIPTION</item_category>
	<item_url></item_url>
	<item_name>$RMOD_NAME</item_name>
	<item_desc>$RMOD_VERBOSE</item_desc>
	<item_admin_url></item_admin_url>
	<item_init_start>/etc/init.d/ntop start</item_init_start>
	<item_init_stop>/etc/init.d/ntop stop</item_init_stop>
</item>
" >> /tmp/cooperation-wui.xml
echo "
<item>
	<item_category>$RMOD_DESCRIPTION_FR</item_category>
	<item_url></item_url>
	<item_name>$RMOD_NAME</item_name>
	<item_desc>$RMOD_VERBOSE_FR</item_desc>
	<item_admin_url></item_admin_url>
	<item_init_start>/etc/init.d/ntop start</item_init_start>
	<item_init_stop>/etc/init.d/ntop stop</item_init_stop>
</item>
" >> /tmp/cooperation-wui-fr.xml
}

#_______________________________________________________________________________________________
#________________________________________FIN_CREATE_WUI_________________________________________




echo "I: Install Ntop"
INSTALL
CREATE_WUI
echo "I: End of install Ntop"
